[gd_scene load_steps=4 format=2]

[ext_resource path="res://MapUIs/GalaxyMap/star.png" type="Texture" id=1]

[sub_resource type="GDScript" id=2]
resource_local_to_scene = true
script/source = "extends Node2D
export var CompanyStation = false

func _on_TextureButton_pressed():
	#GalaxySave.setLastStarClicked(self.global_position.x)
	print(system_type)
	#get_tree().change_scene(\"res://MapUIs/InsideSystem/InsideSystem.tscn\")
	
func growSprite(spriteName):
	spriteName.set_scale(Vector2(2,2))
func shrinkSprite(spriteName):
	$SizeTween.interpolate_property(spriteName, \"scale\", Vector2(2,2), Vector2(1,1), .2, Tween.TRANS_LINEAR, Tween.EASE_IN)
	$SizeTween.start()

func _on_Area2D_body_entered(_body):
	var playerStarList = get_parent().starsInside
	var i = playerStarList.find(self)
	if i < 0:
		playerStarList.append(self)
		get_parent().starsInside = playerStarList
		if playerStarList.size() == 1:
			growSprite(self)
			updateSystemInfoPanel(playerStarList[0].global_position) # set star info
			$Tween.stop_all()
			$Tween.interpolate_property(
				get_node(\"../SystemInfo/Control\"),
				'modulate:a',
				get_node(\"../SystemInfo/Control\").get_modulate().a,
				1,
				0.25,
				Tween.TRANS_SINE,
				Tween.EASE_OUT
			) # show info panel
			$Tween.start()

func _on_Area2D_body_exited(_body):
	var playerStarList = get_parent().starsInside
	var i = playerStarList.find(self)
	if i > -1:
		playerStarList.remove(i)
		get_parent().starsInside = playerStarList
	if playerStarList.size() == 0:
		$Tween.stop_all()
		$Tween.interpolate_property(
			get_node(\"../SystemInfo/Control\"),
			'modulate:a',
			get_node(\"../SystemInfo/Control\").get_modulate().a,
			0.0,
			0.25,
			Tween.TRANS_SINE,
			Tween.EASE_OUT
		) # hide info panel
		$Tween.start()
	elif i == 0:
		updateSystemInfoPanel(playerStarList[0].global_position)
		growSprite(playerStarList[0])
	if self.get_scale().x > 1:
		shrinkSprite(self)


var planetAmountOptions = [0,1,2,3,3,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,10,11,12,13,14]
onready var constantsHolder = get_node(\"/root/ConstantsHolder\")
var starIm = preload(\"res://MapUIs/InsideSystem/closeupStar.png\")
func updateSystemInfoPanel(seedUsed):
	var starNameOptions = constantsHolder.starNameOptions
	var pStarImage = get_node(\"../SystemInfo/Control/Holder/StarImage\")
	var pStarName = get_node(\"../SystemInfo/Control/Holder/StarName\")
	var pStarCoords = get_node(\"../SystemInfo/Control/Holder/StarCoords\")
	var pPlanetAmount = get_node(\"../SystemInfo/Control/Holder/PlanetAmount\")
	var pSystemType = get_node(\"../SystemInfo/Control/Holder/SystemType\")
	var systemTypeOptions = [\"Green\",\"Red\",\"Green/Red\"]
	
	var keyedSeed = pow(seedUsed.x,2)*cos(pow(seedUsed.x,3))
	seed(keyedSeed)
	var planetAmount = planetAmountOptions[randi() % planetAmountOptions.size()]
	pStarImage.texture = starIm
	pStarImage.rect_size = Vector2(64,64)
	pStarImage.modulate = Color.from_hsv((randi() % 12) / 12.0, 1, 1) #set star texture
	pStarName.text = starNameOptions[randi() % starNameOptions.size()].capitalize() #generate star name
	var degPos = rad2deg(atan2(seedUsed.y,seedUsed.x))*-1
	if degPos < 0:
		degPos += 360
	pStarCoords.text = String(seedUsed.distance_to(Vector2(0,0))) + \", \" + String(degPos)+\"Â°\" #set star coordinates
	pPlanetAmount.text = \"Planet Count: \" + String(planetAmount) #set planet amount
	get_system_type()
	pSystemType.text = system_type_text

export var system_type : Array
var system_type_text : String = \"System Type: Error\"
func get_system_type():
	if system_type.size() > 0:
		system_type_text = \"System Type: \" + array_join(system_type)
	else:
		system_type_text = \"System Type: Uninhabited\"
	return system_type_text

func array_join(arr : Array, glue : String = ', ') -> String:
	var string : String = ', '
	for index in range(0, arr.size()):
		string += str(arr[index])
		if index < arr.size():
			string += glue
	return string
"

[sub_resource type="CircleShape2D" id=1]

[node name="Node2D" type="Node2D" groups=["star_system"]]
script = SubResource( 2 )

[node name="TextureButton" type="TextureButton" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -32.0
margin_top = -32.0
margin_right = 32.0
margin_bottom = 32.0
texture_normal = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="."]
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
scale = Vector2( 2, 2 )
shape = SubResource( 1 )

[node name="Tween" type="Tween" parent="."]

[node name="SizeTween" type="Tween" parent="."]

[connection signal="pressed" from="TextureButton" to="." method="_on_TextureButton_pressed"]
[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_Area2D_body_exited"]
