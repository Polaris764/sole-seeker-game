[gd_scene load_steps=44 format=2]

[ext_resource path="res://Villager.gd" type="Script" id=1]
[ext_resource path="res://OnFootAssets/Village/VillagerHair2.png" type="Texture" id=2]
[ext_resource path="res://OnFootAssets/Hitboxes-Hurtboxes/SoftCollision.tscn" type="PackedScene" id=3]
[ext_resource path="res://OnFootAssets/Village/VillagerPants.png" type="Texture" id=4]
[ext_resource path="res://OnFootAssets/Village/VillagerShirt.png" type="Texture" id=5]
[ext_resource path="res://OnFootAssets/Village/VillagerSkin.png" type="Texture" id=6]
[ext_resource path="res://OnFootAssets/Village/VillagerShoes.png" type="Texture" id=7]

[sub_resource type="Shader" id=50]
code = "shader_type canvas_item;

// Which color you want to change
uniform vec4 u_color_key : hint_color;
// Which color to replace it with
uniform vec4 u_replacement_color : hint_color;
// How much tolerance for the replacement color (between 0 and 1)
uniform float u_tolerance;

void fragment() {
    // Get color from the sprite texture at the current pixel we are rendering
    vec4 original_color = texture(TEXTURE, UV);
    vec3 col = original_color.rgb;
    // Get a rough degree of difference between the texture color and the color key
    vec3 diff3 = col - u_color_key.rgb;
    float m = max(max(abs(diff3.r), abs(diff3.g)), abs(diff3.b));
    // Change color of pixels below tolerance threshold, while keeping shades if any (a bit naive, there may better ways)
    float brightness = length(col);
    col = mix(col, u_replacement_color.rgb * brightness, step(m, u_tolerance));
    // Assign final color for the pixel, and preserve transparency
    COLOR = vec4(col.rgb, original_color.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 50 )
shader_param/u_color_key = Color( 0.192157, 0.462745, 0.137255, 1 )
shader_param/u_replacement_color = Color( 0.454902, 0.239216, 0.168627, 1 )
shader_param/u_tolerance = 0.3

[sub_resource type="Shader" id=52]
code = "shader_type canvas_item;

// Which color you want to change
uniform vec4 u_color_key : hint_color;
// Which color to replace it with
uniform vec4 u_replacement_color : hint_color;
// How much tolerance for the replacement color (between 0 and 1)
uniform float u_tolerance;

void fragment() {
    // Get color from the sprite texture at the current pixel we are rendering
    vec4 original_color = texture(TEXTURE, UV);
    vec3 col = original_color.rgb;
    // Get a rough degree of difference between the texture color and the color key
    vec3 diff3 = col - u_color_key.rgb;
    float m = max(max(abs(diff3.r), abs(diff3.g)), abs(diff3.b));
    // Change color of pixels below tolerance threshold, while keeping shades if any (a bit naive, there may better ways)
    float brightness = length(col);
    col = mix(col, u_replacement_color.rgb * brightness, step(m, u_tolerance));
    // Assign final color for the pixel, and preserve transparency
    COLOR = vec4(col.rgb, original_color.a);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 52 )
shader_param/u_color_key = Color( 0.192157, 0.462745, 0.137255, 1 )
shader_param/u_replacement_color = Color( 0.658824, 0.207843, 0.682353, 1 )
shader_param/u_tolerance = 0.3

[sub_resource type="Shader" id=54]
code = "shader_type canvas_item;

// Which color you want to change
uniform vec4 u_color_key : hint_color;
// Which color to replace it with
uniform vec4 u_replacement_color : hint_color;
// How much tolerance for the replacement color (between 0 and 1)
uniform float u_tolerance;

void fragment() {
    // Get color from the sprite texture at the current pixel we are rendering
    vec4 original_color = texture(TEXTURE, UV);
    vec3 col = original_color.rgb;
    // Get a rough degree of difference between the texture color and the color key
    vec3 diff3 = col - u_color_key.rgb;
    float m = max(max(abs(diff3.r), abs(diff3.g)), abs(diff3.b));
    // Change color of pixels below tolerance threshold, while keeping shades if any (a bit naive, there may better ways)
    float brightness = length(col);
    col = mix(col, u_replacement_color.rgb * brightness, step(m, u_tolerance));
    // Assign final color for the pixel, and preserve transparency
    COLOR = vec4(col.rgb, original_color.a);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 54 )
shader_param/u_color_key = Color( 0.211765, 0.486275, 0.160784, 1 )
shader_param/u_replacement_color = Color( 0.435294, 0.454902, 0.286275, 1 )
shader_param/u_tolerance = 0.4

[sub_resource type="Shader" id=56]
code = "shader_type canvas_item;

// Which color you want to change
uniform vec4 u_color_key : hint_color;
// Which color to replace it with
uniform vec4 u_replacement_color : hint_color;
// How much tolerance for the replacement color (between 0 and 1)
uniform float u_tolerance;

void fragment() {
    // Get color from the sprite texture at the current pixel we are rendering
    vec4 original_color = texture(TEXTURE, UV);
    vec3 col = original_color.rgb;
    // Get a rough degree of difference between the texture color and the color key
    vec3 diff3 = col - u_color_key.rgb;
    float m = max(max(abs(diff3.r), abs(diff3.g)), abs(diff3.b));
    // Change color of pixels below tolerance threshold, while keeping shades if any (a bit naive, there may better ways)
    float brightness = length(col);
    col = mix(col, u_replacement_color.rgb * brightness, step(m, u_tolerance));
    // Assign final color for the pixel, and preserve transparency
    COLOR = vec4(col.rgb, original_color.a);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 56 )
shader_param/u_color_key = Color( 0.211765, 0.486275, 0.160784, 1 )
shader_param/u_replacement_color = Color( 0.133333, 0.133333, 0.133333, 1 )
shader_param/u_tolerance = 0.3

[sub_resource type="Shader" id=58]
code = "shader_type canvas_item;

// Which color you want to change
uniform vec4 u_color_key : hint_color;
// Which color to replace it with
uniform vec4 u_replacement_color : hint_color;
// How much tolerance for the replacement color (between 0 and 1)
uniform float u_tolerance;

void fragment() {
    // Get color from the sprite texture at the current pixel we are rendering
    vec4 original_color = texture(TEXTURE, UV);
    vec3 col = original_color.rgb;
    // Get a rough degree of difference between the texture color and the color key
    vec3 diff3 = col - u_color_key.rgb;
    float m = max(max(abs(diff3.r), abs(diff3.g)), abs(diff3.b));
    // Change color of pixels below tolerance threshold, while keeping shades if any (a bit naive, there may better ways)
    float brightness = length(col);
    col = mix(col, u_replacement_color.rgb * brightness, step(m, u_tolerance));
    // Assign final color for the pixel, and preserve transparency
    COLOR = vec4(col.rgb, original_color.a);
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 58 )
shader_param/u_color_key = Color( 0.164706, 0.392157, 0.117647, 1 )
shader_param/u_replacement_color = Color( 0.160784, 0.160784, 0.160784, 1 )
shader_param/u_tolerance = 0.3

[sub_resource type="CapsuleShape2D" id=60]
height = 26.0

[sub_resource type="CapsuleShape2D" id=61]
height = 26.0

[sub_resource type="CapsuleShape2D" id=62]
radius = 7.5
height = 15.0

[sub_resource type="AnimationNodeAnimation" id=63]
animation = "idleDown"

[sub_resource type="AnimationNodeAnimation" id=64]
animation = "idleRight"

[sub_resource type="AnimationNodeAnimation" id=65]
animation = "idleUp"

[sub_resource type="AnimationNodeAnimation" id=66]
animation = "idleLeft"

[sub_resource type="AnimationNodeBlendSpace2D" id=67]
blend_point_0/node = SubResource( 63 )
blend_point_0/pos = Vector2( 0, 1.1 )
blend_point_1/node = SubResource( 64 )
blend_point_1/pos = Vector2( 1, 0 )
blend_point_2/node = SubResource( 65 )
blend_point_2/pos = Vector2( 0, -1.1 )
blend_point_3/node = SubResource( 66 )
blend_point_3/pos = Vector2( -1, 0 )
min_space = Vector2( -1, -1.1 )
max_space = Vector2( 1, 1.1 )

[sub_resource type="AnimationNodeAnimation" id=68]
animation = "walkDown"

[sub_resource type="AnimationNodeAnimation" id=69]
animation = "walkRight"

[sub_resource type="AnimationNodeAnimation" id=70]
animation = "walkUp"

[sub_resource type="AnimationNodeAnimation" id=71]
animation = "walkLeft"

[sub_resource type="AnimationNodeBlendSpace2D" id=72]
blend_point_0/node = SubResource( 68 )
blend_point_0/pos = Vector2( 0, 1.1 )
blend_point_1/node = SubResource( 69 )
blend_point_1/pos = Vector2( 1, 0 )
blend_point_2/node = SubResource( 70 )
blend_point_2/pos = Vector2( 0, -1.1 )
blend_point_3/node = SubResource( 71 )
blend_point_3/pos = Vector2( -1, 0 )
min_space = Vector2( -1, -1.1 )
max_space = Vector2( 1, 1.1 )

[sub_resource type="AnimationNodeStateMachineTransition" id=73]

[sub_resource type="AnimationNodeStateMachineTransition" id=74]

[sub_resource type="AnimationNodeStateMachine" id=75]
states/Idle/node = SubResource( 67 )
states/Idle/position = Vector2( 224, 32 )
states/Walking/node = SubResource( 72 )
states/Walking/position = Vector2( 224, 151 )
transitions = [ "Walking", "Idle", SubResource( 73 ), "Idle", "Walking", SubResource( 74 ) ]
start_node = "Idle"
graph_offset = Vector2( -214, -2 )

[sub_resource type="AnimationNodeStateMachinePlayback" id=27]

[sub_resource type="Animation" id=77]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 4 ]
}

[sub_resource type="Animation" id=78]
resource_name = "idleDown"
length = 2.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}

[sub_resource type="Animation" id=79]
resource_name = "idleLeft"
length = 2.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42, 43 ]
}

[sub_resource type="Animation" id=80]
resource_name = "idleRight"
length = 2.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38, 39 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38, 39 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38, 39 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38, 39 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.4, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 36, 37, 38 ]
}

[sub_resource type="Animation" id=32]
resource_name = "idleUp"
length = 2.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.4, 1.5, 2.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}

[sub_resource type="Animation" id=33]
resource_name = "walkDown"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27, 28, 29, 30, 31, 26 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27, 28, 29, 30, 31, 26 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27, 28, 29, 30, 31, 26 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27, 28, 29, 30, 31, 26 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27, 28, 29, 30, 31, 26 ]
}

[sub_resource type="Animation" id=81]
resource_name = "walkLeft"
length = 0.6
loop = true
step = 0.075
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17, 18, 19 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17, 18, 19 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17, 18, 19 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17, 18, 19 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17, 18, 19 ]
}

[sub_resource type="Animation" id=82]
resource_name = "walkRight"
length = 0.6
loop = true
step = 0.075
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.075, 0.15, 0.225, 0.3, 0.375, 0.45, 0.525 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 4, 5, 6, 7, 8, 9, 10, 11 ]
}

[sub_resource type="Animation" id=36]
resource_name = "walkUp"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../SkinSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23, 24, 25 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ShirtSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23, 24, 25 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../PantsSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23, 24, 25 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../ShoeSprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23, 24, 25 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../HairSprite:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 20, 21, 22, 23, 24, 25 ]
}

[node name="Villager" type="KinematicBody2D" groups=["Villager"]]
scale = Vector2( 0.4, 0.4 )
collision_layer = 3
collision_mask = 0
script = ExtResource( 1 )

[node name="SkinSprite" type="Sprite" parent="."]
material = SubResource( 5 )
position = Vector2( 4, -24 )
texture = ExtResource( 6 )
hframes = 44
frame = 4

[node name="ShirtSprite" type="Sprite" parent="."]
material = SubResource( 7 )
position = Vector2( 4, -24 )
texture = ExtResource( 5 )
hframes = 44
frame = 4

[node name="PantsSprite" type="Sprite" parent="."]
material = SubResource( 9 )
position = Vector2( 4, -24 )
texture = ExtResource( 4 )
hframes = 44
frame = 4

[node name="ShoeSprite" type="Sprite" parent="."]
material = SubResource( 11 )
position = Vector2( 4, -24 )
texture = ExtResource( 7 )
hframes = 44
frame = 4

[node name="HairSprite" type="Sprite" parent="."]
material = SubResource( 13 )
position = Vector2( 4, -24 )
texture = ExtResource( 2 )
hframes = 44
frame = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
position = Vector2( 0, 1 )
shape = SubResource( 60 )

[node name="Area2D" type="Area2D" parent="."]
visible = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 3.5, -20 )
shape = SubResource( 61 )

[node name="SoftCollision" parent="." instance=ExtResource( 3 )]
visible = false

[node name="CollisionShape2D" parent="SoftCollision" index="0"]
position = Vector2( 3.5, -12.5 )
shape = SubResource( 62 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 75 )
anim_player = NodePath("AnimationPlayer")
active = true
parameters/playback = SubResource( 27 )
parameters/Idle/blend_position = Vector2( 0, 0 )
parameters/Walking/blend_position = Vector2( 0, 0 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimationTree"]
anims/RESET = SubResource( 77 )
anims/idleDown = SubResource( 78 )
anims/idleLeft = SubResource( 79 )
anims/idleRight = SubResource( 80 )
anims/idleUp = SubResource( 32 )
anims/walkDown = SubResource( 33 )
anims/walkLeft = SubResource( 81 )
anims/walkRight = SubResource( 82 )
anims/walkUp = SubResource( 36 )

[node name="Tween" type="Tween" parent="."]

[editable path="SoftCollision"]
